/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/
/*
Copyright (C) 2023  Intel Corporation. All rights reserved.
Your use of Intel Corporation's design tools, logic functions 
and other software and tools, and any partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Intel Program License 
Subscription Agreement, the Intel Quartus Prime License Agreement,
the Intel FPGA IP License Agreement, or other applicable license
agreement, including, without limitation, that your use is for
the sole purpose of programming logic devices manufactured by
Intel and sold by Intel or its authorized distributors.  Please
refer to the applicable agreement for further details, at
https://fpgasoftware.intel.com/eula.
*/
(header "symbol" (version "1.2"))
(symbol
	(rect 16 16 240 176)
	(text "object" (rect 5 0 48 20)(font "Intel Clear" (font_size 8)))
	(text "inst" (rect 8 137 31 156)(font "Intel Clear" ))
	(port
		(pt 0 32)
		(input)
		(text "VCLK" (rect 0 0 36 20)(font "Intel Clear" (font_size 8)))
		(text "VCLK" (rect 21 27 57 47)(font "Intel Clear" (font_size 8)))
		(line (pt 0 32)(pt 16 32))
	)
	(port
		(pt 0 48)
		(input)
		(text "zero[15..0]" (rect 0 0 75 20)(font "Intel Clear" (font_size 8)))
		(text "zero[15..0]" (rect 21 43 96 63)(font "Intel Clear" (font_size 8)))
		(line (pt 0 48)(pt 16 48)(line_width 3))
	)
	(port
		(pt 0 64)
		(input)
		(text "xOut[10..0]" (rect 0 0 79 20)(font "Intel Clear" (font_size 8)))
		(text "xOut[10..0]" (rect 21 59 100 79)(font "Intel Clear" (font_size 8)))
		(line (pt 0 64)(pt 16 64)(line_width 3))
	)
	(port
		(pt 0 80)
		(input)
		(text "yOut[10..0]" (rect 0 0 80 20)(font "Intel Clear" (font_size 8)))
		(text "yOut[10..0]" (rect 21 75 101 95)(font "Intel Clear" (font_size 8)))
		(line (pt 0 80)(pt 16 80)(line_width 3))
	)
	(port
		(pt 0 96)
		(input)
		(text "switchLoadY" (rect 0 0 89 20)(font "Intel Clear" (font_size 8)))
		(text "switchLoadY" (rect 21 91 110 111)(font "Intel Clear" (font_size 8)))
		(line (pt 0 96)(pt 16 96))
	)
	(port
		(pt 0 112)
		(input)
		(text "xSpawn[15..0]" (rect 0 0 100 20)(font "Intel Clear" (font_size 8)))
		(text "xSpawn[15..0]" (rect 21 107 121 127)(font "Intel Clear" (font_size 8)))
		(line (pt 0 112)(pt 16 112)(line_width 3))
	)
	(port
		(pt 0 128)
		(input)
		(text "despawn" (rect 0 0 63 20)(font "Intel Clear" (font_size 8)))
		(text "despawn" (rect 21 123 84 143)(font "Intel Clear" (font_size 8)))
		(line (pt 0 128)(pt 16 128))
	)
	(port
		(pt 224 32)
		(output)
		(text "sendColor" (rect 0 0 73 20)(font "Intel Clear" (font_size 8)))
		(text "sendColor" (rect 130 27 203 47)(font "Intel Clear" (font_size 8)))
		(line (pt 224 32)(pt 208 32))
	)
	(port
		(pt 224 48)
		(output)
		(text "colision" (rect 0 0 54 20)(font "Intel Clear" (font_size 8)))
		(text "colision" (rect 149 43 203 63)(font "Intel Clear" (font_size 8)))
		(line (pt 224 48)(pt 208 48))
	)
	(port
		(pt 224 64)
		(output)
		(text "avail" (rect 0 0 33 20)(font "Intel Clear" (font_size 8)))
		(text "avail" (rect 170 59 203 79)(font "Intel Clear" (font_size 8)))
		(line (pt 224 64)(pt 208 64))
	)
	(drawing
		(rectangle (rect 16 16 208 144))
	)
)
